#!/bin/bash

# git-sprint-commit - Create git commits with sprint week number
#
# Usage:
#   git sprint-commit               Output current sprint week format
#   git sprint-commit -m <message>  Create commit with sprint week prefix
#
# Options:
#   -m, --message    Create a git commit with the given message
#
# Examples:
#   git sprint-commit          -> prints: sprint-2024-08w
#   git sprint-commit -m "Fix" -> creates commit: sprint-2024-08w: Fix

# Parse command line options
TEMP=$(getopt -o m: --long message: -n 'git-sprint-commit' -- "$@")

if [ $? -ne 0 ]; then
    echo "Error: Invalid option" >&2
    exit 1
fi

eval set -- "$TEMP"

message=""

while true; do
    case "$1" in
        -m|--message)
            message="$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "Internal error!" >&2
            exit 1
            ;;
    esac
done

# Get sprint week format
sprint_week="sprint-$(date +%Y-%Vw)"

# If no message provided, just output the sprint week
if [ -z "$message" ] && [ -z "$*" ]; then
    echo "$sprint_week"
    exit 0
fi

# Append any remaining arguments to message
if [ -n "$*" ]; then
    if [ -n "$message" ]; then
        message="$message $*"
    else
        message="$*"
    fi
fi

# Create sprint commit message and execute git commit
git commit -m "$sprint_week: $message"
